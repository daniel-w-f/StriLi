--[[
Obj: StriLi.MainFrame

variables:
	frame
	lableRow
	rows
	unusedRowFrames
	rowcount

methods:
	--can be called-- 
	init
	show
	hide
	toggle
	addPlayer
	removePlayer
	onMouseUp_Name
	
	--for local use only--
	setupLableRow
	resize
	reIndexFrames

--]]

--[[
	Dependencies:
		- RowFrame
		- LableRowFrame
		- InfinitStack
		
--]]


StriLi.MainFrame = {frame = nil, lableRow=nil, rows={}, unusedRowFrames=nil, rowcount=1}

function StriLi.MainFrame:init()

	if self.frame == nil then
		self.frame = CreateFrame("FRAME", "StriLi_MainFrame", UIParent, "StriLi_MainFrame_Template");
	end
	if self.lableRow == nil then
		self:setupLableRow();
	end
	if self.unusedRowFrames == nil then
		self.unusedRowFrames = InfinitStack:new(nil, RowFrame);	-- InfinitStack creates a new object based on the class passed to it as the secound parameter, if no elements are left in the stack.
	end
	
end

function StriLi.MainFrame:show()
	ShowUIPanel(self.frame);
end

function StriLi.MainFrame:hide()
	HideUIPanel(self.frame);
end

function StriLi.MainFrame:toggle()

	if (self.frame:IsVisible()) then
		self:hide();
	else
		self:show();
	end
	
end	

function StriLi.MainFrame:setupLableRow()
	
	if self.lableRow==nil then
		self.lableRow=LableRowFrame:new(nil, "LableRow", self.frame, 1);
		self.lableRow:show();
		
		self:resize();
	end
	
end

function StriLi.MainFrame:addPlayer(raidMember)

	self.rows[raidMember[1]] = self.unusedRowFrames:pop(nil, "StriLi_RowFrame"...tostring(rowcount), self.frame, self.rowcount+1, raidMember);
	self.rows[raidMember[1]]:show();
	
	self.rowcount = self.rowcount+1
	
	self:resize();
	
end

function StriLi.MainFrame:removePlayer(raidMember)

	if self.rows[raidMember[1]] ~= nil then
	
		self.unusedRowFrames:push(self.rows[raidMember[1]])
		self.rows[raidMember[1]]:hide();
		self.rows[raidMember[1]] = nil;
		self.rowcount = self.rowcount-1;
		
		self:reIndexFrames();
		
		self:resize();
		
		return true;
	
	end
	
	return false;
	
end

function StriLi.MainFrame:resize()

	local SumRowFrameHeight = self.rowcount * RowFrame:getHight();
	self.frame:SetHeight(SumRowFrameHeight - 2*RowFrame:getY_offset());
	
end

function StriLi.MainFrame:reIndexFrames()

	local i = 2;

	for player, frame in self.rows do
	
		frame:setPosIndex(i)
		i = i+1;
	
	end
	
end